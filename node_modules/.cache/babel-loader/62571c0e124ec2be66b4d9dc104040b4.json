{"ast":null,"code":"import { GET_COLORS, GET_INTERIOR, GET_WHEELS, GET_ATTRIBUTES } from \"../actions/FetchAction\";\nlet initialState = {\n  engines: [],\n  colors: [],\n  extras: [[]],\n  interior: [],\n  wheels: []\n};\n\nconst ConfigAttributeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ATTRIBUTES:\n      return { ...state,\n        engines: action.payload.filter(attribute => attribute.type === \"engine\"),\n        colors: action.payload.filter(attribute => attribute.type === \"color\"),\n        extras: action.payload.filter(attribute => attribute.type === \"extra\"),\n        interior: action.payload.filter(attribute => attribute.type === \"interior\"),\n        wheels: action.payload.filter(attribute => attribute.type === \"wheel\")\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = ConfigAttributeReducer;\nexport default ConfigAttributeReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigAttributeReducer\");","map":{"version":3,"names":["GET_COLORS","GET_INTERIOR","GET_WHEELS","GET_ATTRIBUTES","initialState","engines","colors","extras","interior","wheels","ConfigAttributeReducer","state","action","type","payload","filter","attribute"],"sources":["/Users/vw7u456/projects/abschluss2/g3t6_zwischenpruefung_jahr2_gruppe07/configurator-frontend/src/reducer/ConfigAttributeReducer.js"],"sourcesContent":["import { GET_COLORS, GET_INTERIOR, GET_WHEELS, GET_ATTRIBUTES } from \"../actions/FetchAction\";\n\nlet initialState = {\n    engines: [],\n    colors: [],\n    extras: [[]],\n    interior: [],\n    wheels: [],\n};\n\nconst ConfigAttributeReducer = (state = initialState, action) => {\n    switch(action.type){\n        case GET_ATTRIBUTES:\n            return {...state,\n                engines: action.payload.filter(attribute => attribute.type === \"engine\"),\n                colors: action.payload.filter(attribute => attribute.type === \"color\"),\n                extras: action.payload.filter(attribute => attribute.type === \"extra\"),\n                interior:  action.payload.filter(attribute => attribute.type === \"interior\"),\n                wheels: action.payload.filter(attribute => attribute.type === \"wheel\"),\n            };\n        default:\n            return state;\n    }\n    \n\n\n}\n\nexport default ConfigAttributeReducer;"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,YAArB,EAAmCC,UAAnC,EAA+CC,cAA/C,QAAqE,wBAArE;AAEA,IAAIC,YAAY,GAAG;EACfC,OAAO,EAAE,EADM;EAEfC,MAAM,EAAE,EAFO;EAGfC,MAAM,EAAE,CAAC,EAAD,CAHO;EAIfC,QAAQ,EAAE,EAJK;EAKfC,MAAM,EAAE;AALO,CAAnB;;AAQA,MAAMC,sBAAsB,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBP,YAAyB;EAAA,IAAXQ,MAAW;;EAC7D,QAAOA,MAAM,CAACC,IAAd;IACI,KAAKV,cAAL;MACI,OAAO,EAAC,GAAGQ,KAAJ;QACHN,OAAO,EAAEO,MAAM,CAACE,OAAP,CAAeC,MAAf,CAAsBC,SAAS,IAAIA,SAAS,CAACH,IAAV,KAAmB,QAAtD,CADN;QAEHP,MAAM,EAAEM,MAAM,CAACE,OAAP,CAAeC,MAAf,CAAsBC,SAAS,IAAIA,SAAS,CAACH,IAAV,KAAmB,OAAtD,CAFL;QAGHN,MAAM,EAAEK,MAAM,CAACE,OAAP,CAAeC,MAAf,CAAsBC,SAAS,IAAIA,SAAS,CAACH,IAAV,KAAmB,OAAtD,CAHL;QAIHL,QAAQ,EAAGI,MAAM,CAACE,OAAP,CAAeC,MAAf,CAAsBC,SAAS,IAAIA,SAAS,CAACH,IAAV,KAAmB,UAAtD,CAJR;QAKHJ,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeC,MAAf,CAAsBC,SAAS,IAAIA,SAAS,CAACH,IAAV,KAAmB,OAAtD;MALL,CAAP;;IAOJ;MACI,OAAOF,KAAP;EAVR;AAeH,CAhBD;;KAAMD,sB;AAkBN,eAAeA,sBAAf"},"metadata":{},"sourceType":"module"}