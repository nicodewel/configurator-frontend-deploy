{"ast":null,"code":"import { GET_COLORS } from \"../actions/GetAttributesAction\";\nlet initialState = {\n  engines: [],\n  colors: [],\n  extras: [[]],\n  interior: [],\n  wheel: []\n};\n\nconst ConfigAttributeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_COLORS:\n      return { ...state,\n        colors: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = ConfigAttributeReducer;\nexport default ConfigAttributeReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigAttributeReducer\");","map":{"version":3,"names":["GET_COLORS","initialState","engines","colors","extras","interior","wheel","ConfigAttributeReducer","state","action","type","payload"],"sources":["/Users/vw7u456/projects/abschluss2/g3t6_zwischenpruefung_jahr2_gruppe07/configurator-frontend/src/reducer/ConfigAttributeReducer.js"],"sourcesContent":["import { GET_COLORS } from \"../actions/GetAttributesAction\";\n\nlet initialState = {\n    engines: [],\n    colors: [],\n    extras: [[]],\n    interior: [],\n    wheel: [],\n};\n\nconst ConfigAttributeReducer = (state = initialState, action) => {\n    switch(action.type){\n        case GET_COLORS:\n            return {...state, colors: action.payload};\n\n        default:\n            return state;\n    }\n    \n\n\n}\n\nexport default ConfigAttributeReducer;"],"mappings":"AAAA,SAASA,UAAT,QAA2B,gCAA3B;AAEA,IAAIC,YAAY,GAAG;EACfC,OAAO,EAAE,EADM;EAEfC,MAAM,EAAE,EAFO;EAGfC,MAAM,EAAE,CAAC,EAAD,CAHO;EAIfC,QAAQ,EAAE,EAJK;EAKfC,KAAK,EAAE;AALQ,CAAnB;;AAQA,MAAMC,sBAAsB,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBP,YAAyB;EAAA,IAAXQ,MAAW;;EAC7D,QAAOA,MAAM,CAACC,IAAd;IACI,KAAKV,UAAL;MACI,OAAO,EAAC,GAAGQ,KAAJ;QAAWL,MAAM,EAAEM,MAAM,CAACE;MAA1B,CAAP;;IAEJ;MACI,OAAOH,KAAP;EALR;AAUH,CAXD;;KAAMD,sB;AAaN,eAAeA,sBAAf"},"metadata":{},"sourceType":"module"}